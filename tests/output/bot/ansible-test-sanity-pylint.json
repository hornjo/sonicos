{
    "docs": "https://docs.ansible.com/ansible-core/2.15/dev_guide/testing/sanity/pylint.html", 
    "results": [
        {
            "message": "The test `ansible-test sanity --test pylint` [[explain](https://docs.ansible.com/ansible-core/2.15/dev_guide/testing/sanity/pylint.html)] failed with 18 errors:", 
            "output": "plugins/module_utils/sonicos_core_functions.py:33:33: singleton-comparison: Comparison 'res.json()['status']['success'] != True' should be 'res.json()['status']['success'] is not True' if checking for the singleton value True, or 'not res.json()['status']['success']' if testing for falsiness\nplugins/modules/sonicos_address_groups.py:221:8: bare-except: No exception type(s) specified\nplugins/modules/sonicos_address_groups.py:280:19: singleton-comparison: Comparison 'compare_json(item, json_params['address_groups'][0]) == True' should be 'compare_json(item, json_params['address_groups'][0]) is True' if checking for the singleton value True, or 'compare_json(item, json_params['address_groups'][0])' if testing for truthiness\nplugins/modules/sonicos_address_groups.py:302:7: singleton-comparison: Comparison 'api_action != None' should be 'api_action is not None'\nplugins/modules/sonicos_address_groups.py:308:7: singleton-comparison: Comparison 'module.params['ssl_verify'] == False' should be 'module.params['ssl_verify'] is False' if checking for the singleton value False, or 'not module.params['ssl_verify']' if testing for falsiness\nplugins/modules/sonicos_address_objects.py:321:7: singleton-comparison: Comparison 'api_action != None' should be 'api_action is not None'\nplugins/modules/sonicos_address_objects.py:327:7: singleton-comparison: Comparison 'module.params['ssl_verify'] == False' should be 'module.params['ssl_verify'] is False' if checking for the singleton value False, or 'not module.params['ssl_verify']' if testing for falsiness\nplugins/modules/sonicos_service_groups.py:126:0: unused-import: Unused import json\nplugins/modules/sonicos_service_groups.py:207:15: singleton-comparison: Comparison 'compare_json(item, json_params['service_groups'][0]) == True' should be 'compare_json(item, json_params['service_groups'][0]) is True' if checking for the singleton value True, or 'compare_json(item, json_params['service_groups'][0])' if testing for truthiness\nplugins/modules/sonicos_service_groups.py:216:7: singleton-comparison: Comparison 'api_action != None' should be 'api_action is not None'\nplugins/modules/sonicos_service_groups.py:222:7: singleton-comparison: Comparison 'module.params['ssl_verify'] == False' should be 'module.params['ssl_verify'] is False' if checking for the singleton value False, or 'not module.params['ssl_verify']' if testing for falsiness\nplugins/modules/sonicos_service_objects.py:200:33: singleton-comparison: Comparison 'res.json()['status']['success'] != True' should be 'res.json()['status']['success'] is not True' if checking for the singleton value True, or 'not res.json()['status']['success']' if testing for falsiness\nplugins/modules/sonicos_service_objects.py:214:7: singleton-comparison: Comparison 'module.params['custom_protocol'] != None' should be 'module.params['custom_protocol'] is not None'\nplugins/modules/sonicos_service_objects.py:248:7: singleton-comparison: Comparison 'api_action != None' should be 'api_action is not None'\nplugins/modules/sonicos_service_objects.py:270:7: singleton-comparison: Comparison 'module.params['ssl_verify'] == False' should be 'module.params['ssl_verify'] is False' if checking for the singleton value False, or 'not module.params['ssl_verify']' if testing for falsiness\nplugins/modules/sonicos_zones.py:266:16: bare-except: No exception type(s) specified\nplugins/modules/sonicos_zones.py:278:7: singleton-comparison: Comparison 'api_action != None' should be 'api_action is not None'\nplugins/modules/sonicos_zones.py:284:7: singleton-comparison: Comparison 'module.params['ssl_verify'] == False' should be 'module.params['ssl_verify'] is False' if checking for the singleton value False, or 'not module.params['ssl_verify']' if testing for falsiness"
        }
    ], 
    "verified": false
}
